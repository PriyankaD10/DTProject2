<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">
		
		<http use-expressions="true">
		<csrf disabled="false"/>
		<intercept-url pattern="/postblog" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
		
		<intercept-url pattern="/blog**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/userhome**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/adminblog**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/adminhome**" access="hasRole('ROLE_ADMIN')" />
		<!-- <intercept-url pattern="/other/**" access="isAuthenticated()" /> -->

		<access-denied-handler error-page="/403" />

		<form-login login-page='/login' login-processing-url="/perform_login"
			default-target-url="/userhome" always-use-default-target="false"
			authentication-failure-url="/403" />

		<logout logout-url="/logout" logout-success-url="/logoutSuccessful"
			delete-cookies="JSESSIONID" invalidate-session="true" />

	</http>

	<authentication-manager>
	<authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select username,password, enabled from user where username=?"
                authorities-by-username-query="select username, concat('ROLE_',role) user_role from user_roles where username=?" />
        </authentication-provider>
     </authentication-manager>
     </beans:beans>